{
	"name": "dataflow5ConditionalSplit",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableforDataFlow",
						"type": "DatasetReference"
					},
					"name": "emp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DSDataFlowAdminEmp",
						"type": "DatasetReference"
					},
					"name": "AdminSink"
				},
				{
					"dataset": {
						"referenceName": "DsDataFlowManagerDest",
						"type": "DatasetReference"
					},
					"name": "ManagerSinkk"
				}
			],
			"transformations": [
				{
					"name": "Admin"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as integer,",
				"          ename as string,",
				"          deptno as integer,",
				"          salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> emp",
				"emp split(equals(deptno, 10),",
				"     equals(deptno, 20),",
				"     disjoint: false) ~> Admin@(Admin, Manager)",
				"Admin@Admin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['adminEmp.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          ename,",
				"          deptno,",
				"          salary",
				"     ),",
				"     partitionBy('hash', 1)) ~> AdminSink",
				"Admin@Manager sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['ManagerEmp.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          ename,",
				"          deptno,",
				"          salary",
				"     ),",
				"     partitionBy('hash', 1)) ~> ManagerSinkk"
			]
		}
	}
}